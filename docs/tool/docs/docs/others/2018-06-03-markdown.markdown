
# Markdown

​	

## 目录

一.  [概述](#概述)

   1. [核心理念](#核心理念)
   2. [名词解释](#名词解释)
   3. [编辑器](#编辑器)

二.  [语法](#语法)

1. [标题](#标题)
2. [文本](#文本)
3. [字体和线](#字体和线)
4. [列表](#列表)
   1. [有序列表](#有序列表)
   2. [无序列表](#无序列表)
   3. [复选框列表](#复选框列表)
5. [表格](#表格)
6. [链接](#链接)
   1. [文字链接](#文字链接)
   2. [图片链接](#图片链接)
   3. [锚点](#锚点)
7. [块引用](#块引用)
8. [代码块](#代码块)
9. [表情](#表情)
10. [相关参考](#相关参考)

---

### 写在前面

***

*限于只花了较短时间写Markdown笔记及总结，如有错误及疏漏，欢迎交流。*


### 概述

***

#### 核心理念

Markdown 致力于使阅读和创作文档变得容易。

* 特点：简洁简易
* 应用场景：叙述，说明，博客，Git，wiki...

#### 名词解释 

*以下两个概念引入HTML标签中的概念，对Markdown中做出的解释*

* 块级元素

  >块级元素占据其父元素（容器）的整个空间，因此创建了一个“块”
  >
  >[了解更多][block]

* 内联元素

  >一个行内元素只占据它对应标签的边框所包含的空间
  >
  >[了解更多][line]

#### 编辑器

关于编辑器，由于笔者也只是用了较短时间。目前只能给出笔者正在使用的。

Mac系统 : [typora][typora]

缺点：HTML语法不能preview ，某些修改需要打开源码格式修改

其他：待机智的你发现

[了解更多][editor]

### 语法

***

#### 标题

Markdown 支持两种形式的标题, Setext 和 atx.

~~~text
Setext 样式的标题使用的等号来表示一级标题, 使用连字符表示二级标题. 
[Setext]
This is an H1
=============

This is an H2
-------------
Atx 样式的标题每行开头使用 1-6 井号, 对应 1-6 级标题
[Atx]
# 一级标题
## 二级标题
### 三级标题
#### 四级标题
##### 五级标题
###### 六级标题
~~~

*注：官方还提供如下功能，但实测未生效，待机智的你~*
~~~text
可选地, 你可以 "关闭" atx 样式的标题. 这纯粹是美化需要 -- 如果你认为这样美观一些就用吧. 关闭标签的井号数量甚至不需要和起始位置的匹配. (起始的井号数量决定了标题的级别.) 

# This is an H1 #

## This is an H2 ##

### This is an H3 ######
~~~



#### 文本


~~~text
普通文本
单行文本  行头加入一个tab或4个空格
~~~

~~~text
文本块 
1.在连续几行的文本开头加入1个tab或者4个空格 此种方式只是将每一行拼接为块
2.块头和块尾 加入一对三个的反引号  推荐 更符合块的定义
~~~

**文本换行**

```text
1.上行文本后面补两个空格
2.两行文本直接加一个空行  该种方式行距较大 已经有点偏向段落 不推荐
```

第一行  
第二行  



#### 字体和线

**文字标签**

~~~text
文字标签功能使行内部分文字块，使用一对反引号。
语法：
`linux`、`markdown`
~~~
效果：`linux` `markdown`

**水平线**

```text
***、---、___可以显示水平线效果
```

**斜体、粗线、删除线**

| 语法                   | 效果                 |
| ---------------------- | -------------------- |
| `*斜体1*`              | *斜体1*              |
| `_斜体_`               | _斜体2_              |
| `**粗体1**`            | **粗体1**            |
| `__粗体2__`            | __粗体2__            |
| `~~删除线~~`           | ~~删除线~~           |
| `***斜粗体***`         | ***斜粗体***         |
| `***~~斜粗体删线~~***` | ***~~斜粗体删线~~*** |
| `~~***斜粗提删线***~~` | ~~***斜粗体删线***~~ |
| `~~___斜粗体删线___~~` | ~~___斜粗体删线___~~ |
|备注：斜体、粗体、删除线可混合使用||



#### 列表

##### 无序列表

`*` `-`

- 昵称
- 爱好
  - 足球
  - 篮球

##### 有序列表

`数字加点加空格`

面向对象的三个基本特征：

1. 封装
   1. 巨人的第一道墙壁
   2. 巨人的第一道墙壁
      1. 巨人的第二道墙壁
2. 继承
3. 多态

*注意：* 此处根据编辑器不同 多层列表符号可能不同

##### 复选框列表

`-[] `

- [ ] 需求分析

`-[x]`

- [x] 选中

#### 表格

```text
|表头1|表头2|
|---|---|
|表格单元|表格单元|
|:---| 左对齐
|:---:| 居中
|---:| 右对齐
```

| 语法                           | 效果                     |
| ------------------------------ | ------------------------ |
| `|表格单元带~~删除线~~|`       | \|表格单元带~~删除线~~\| |
| 注意：单元格可混合其他基本语法 |                          |



#### 链接

##### 文字链接

| #    | 语法                                      | 效果                                    |
| ---- | ----------------------------------------- | --------------------------------------- |
| 1    | `[百度](http://www.baidu.com "悬停显示")` | [百度](http://www.baidu.com "悬停显示") |
| 2    | `[百度][baidu]`                           | [百度][baidu]                           |

语法2由两部分组成:

- 两个中括号,[]里的标识符，markdown文中需定

- 地址是相对路径也可 但不建议

> `[baidu]: https://www.baidu.com`
>
> 使用URL标识符能达到复用的目的，一般全文所有URL标识符统一放在文末定义，简洁

#####  图片链接

基本格式

```![alt](URL title)```

alt和title即对应HTML中的Alt和title属性(都可省略):

- alt表示图片显示失败时的替换文本
- title表示鼠标悬停在图片时的显示文本
- URL即图片的URL地址  *本地jeklly 测试时不要写localhost*

| #    | 语法                                                       | 效果                                                     |
| ---- | ---------------------------------------------------------- | -------------------------------------------------------- |
| 1    | `![baidu](http://www.baidu.com/img/bdlogo.gif "百度logo")` | ![baidu](http://www.baidu.com/img/bdlogo.gif "百度logo") |
| 2    | `![][foryou]`                                              | ![][foryou]                                              |

***注意：*** 例2写法使用**URL标识符**的形式

> 文中定义[foryou]的路径

```text
[foryou]:https://github.com/guodongxiaren/ImageCache/raw/master/Logo/foryou.gif
```

##### 锚点

每个标题即是一个锚点

| 语法              | 效果              |
| ----------------- | ----------------- |
| `[回到目录](#目录)` | [回到目录](#目录) |

**注意：**锚点是通过“()”中的索引定位，而链接是通过"[]"中的索引定位。

####  块引用

`>`

**常用场景：常用于引用文本**

​	《假如生活欺骗了你》是俄国诗人普希金于1825年流放南俄敖德萨同当地总督发生冲突后，被押送到其父亲的领地米哈伊洛夫斯科耶村幽禁期间创作的一首诗歌。诗歌全文表述了一种积极乐观而坚强的人生态度，并且因它亲切和蔼的口气让许多人把它记于自己的笔记本上，成为了激励自己勇往直前，永不放弃的座右铭。

>创作背景：  
>
>​	该诗写于1825年，正是普希金流放南俄敖德萨同当地总督发生冲突后，被押送到其父亲的领地米哈伊洛夫斯科耶村幽禁期间所作。从1824年8月至1826年9月，是一段极为孤独寂寞的生活。那时俄国革命如火如荼，诗人却被迫与世隔绝。在这样的处境下，诗人仍没有丧失希望与斗志，他热爱生活，执著地追求理想，相信光明必来，正义必胜。

**块引用多级结构**

> 数据结构
>
> > 树
> >
> > > 二叉树

####  代码块

在三个反引号后面加上编程语言的名字，另起一行开始写代码，最后一行加三个反引号

```java
public static void main(String[] args){} 
```

~~~php
<?php echo "hello world";
~~~

**diff语法 **

版本控制的系统中都少不了diff的功能，即展示一个文件内容的增加与删除。
GFM中可以显示的展示diff效果。使用绿色表示新增，红色表示删除。

其语法与代码高亮类似，只是在三个反引号后面写diff，
并且其内容中，以 `+ `开头表示新增，`- `开头表示删除。

~~~text
```diff
+ 假如生活欺骗了你
+ 不要悲伤，不要心急
+ 忧郁的日子里须要镇静：
+ 相信吧，快乐的日子将会来临！
+ 心儿永远向往着未来；
- 现在却常是忧郁。
```
~~~

```diff
+ 假如生活欺骗了你
+ 不要悲伤，不要心急
+ 忧郁的日子里须要镇静：
+ 相信吧，快乐的日子将会来临！
+ 心儿永远向往着未来；
- 现在却常是忧郁。
```

#### 表情

Github的Markdown语法支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。

比如`:blush:` 可以显示 :blush:

更多请查询官方网页[http://www.emoji-cheat-sheet.com](http://www.emoji-cheat-sheet.com)



### 相关参考 

>1. [Markdown中文文档][MarkdownCN]
>2. [README文件语法解读][Flavored]

***







[block]:https://developer.mozilla.org/zh-CN/docs/Web/HTML/Block-level_elements  "块级元素"
[typora]: https://typora.io/	"typora官方"
[foryou]: https://github.com/guodongxiaren/ImageCache/raw/master/Logo/foryou.gif
[editor]: https://www.zhihu.com/question/22700184	"Mac markdown editor"
[baidu]: Https://www.baidu.com	"百度"
[MarkdownCN]: https://markdown-zh.readthedocs.io/en/latest/	"Markdown CN docs"
[Flavored]: https://github.com/guodongxiaren/README
[line]: https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements	"行内元素"